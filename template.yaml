AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app

  Sample SAM Template for sam-app

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

    Tracing: Active
    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON
  Api:
    TracingEnabled: true
Resources:
  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: HelloWoorldFunction
      CodeUri: src/hello_world/
      Handler: app.handler
      Runtime: python3.13
      Architectures:
      - x86_64
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello
            Method: get
  # S3 {
  SampleBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: sample-bucket

  PutS3ObjectFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: PutS3ObjectFunction
      CodeUri: src/S3
      Handler: app.lambda_handler
      Runtime: python3.13
      Architectures:
        - x86_64
      Events:
        PutS3Object:
          Type: Api
          Properties:
            Path: /s3
            Method: post
  # }

  # EventBridge
  EventBridgeFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: "EventBridgeFunction"
      CodeUri: src/EventBridge
      Handler: app.lambda_handler
      Runtime: python3.13
      Architectures:
      - x86_64
      Events:
        SampleEvent:
          Type: Schedule
          Properties:
            Name: SampleEvent
            Schedule: 'rate(365 days)'
            State: ENABLED

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: API Gateway endpoint URL for Prod stage for Hello World function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  PutS3ObjectApi:
    Description: S3 オブジェクト追加用API
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/s3/"

  # LocalStack 用API {
  LocalStackHelloWorldApi:
    Description: API Gateway endpoint URL for Prod stage for Hello World function in LocalStack
    Value: !Sub "http://localstack:4566/restapis/${ServerlessRestApi}/Prod/_user_request_/hello"
  LocalStackPutS3ObjectApi:
    Description: LocalStack でのS3 オブジェクト追加用API
    Value: !Sub "http://localstack:4566/restapis/${ServerlessRestApi}/Prod/_user_request_/s3"
  # }

  HelloWorldFunction:
    Description: Hello World Lambda Function ARN
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value: !GetAtt HelloWorldFunctionRole.Arn
